<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAABGdBTUEAALGPC/xhBQAAGBVJREFUeF7t
        nflzVNedxfkT9MtkYxP7YsCKE7MIkFobSGAnZJkk47gSxTNJqiYVF6lJpTKVyowylZnMJJmhbIdsjq04
        gG0c29hgcNgiQKySUGsFCZCFbWxstrYBIQw4d8736QmE+Aokdb/X974+p+rzG3r3vfs933Pvfd1IIyiK
        oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoqiM199a784CMbAcVIAVoCri
        VAJ5VnnmmD8VFBV9wfDS8OVAmqATGOKxDpT700RR0RGM3dv0YnLN/OQGEooMAsp9wcjZQFb6BNDMTgZG
        goDHA8o9/a11Fs70s3DWnQUjkyRZ4U8rRdktmBUrPhs/AHB0mpXlTzNF2aW/tczCGX/Wij6GJaknLvPs
        TzlF2aEPW2YtAwmY05BgwTxX+tNOUekVzJglhgRiTBIeFX4JKCo9gglzQGcfU5JwyfFLQVHhCuYrB4k+
        ZiThE/fLQVHhCcaT5tcMScKHXxaiwtOHLTNXKCYkaWMmdwFUOILZlgMxHbELvgugghVMhm2/aj6Sfvgt
        QSo4wWA5/QxH7KLTL5Vd+uC5mTFQAdaBKuIgL86sgsES/QxH7MOObwfCNNL0lcAQ97m2TzUbsY/0/o9B
        mEUaX1YN1UjEPa68qhqN2El6Pg68vHZGFswiW3zVRMRRnoepGm8xGbGX8L8ajObPAZ3AkGhxde8M82Ez
        cYhwA6D72buk+RP9jUPc58pW1WDEbsILAGl+kACGRIvLL9xlrjXMMNdgKuIU4QTApWfuygZs/ohydb9q
        LmI/YQXA9DgwJHp8sAWrv24uYj/BB0DX09MrNOOQCPD8dG793SbYAOh6elo2SABDosfVWq7+jhNsAFxc
        M22FZhziPpe3sfkjQHABcHHN1CyQAIZEi0svTtPMRNwj0AAo728cEg2u1uDs3yw7AOI4wQXAhdVT1gFD
        osXlbbL6q2Yi7hFoACT6m4e4TdcLUzUTEXcJJgDOr5qcDQyJDheenmKuHMDWvwnGIVEhsACI9TcQcZvL
        27H1101E3CWYAHj/T5NiwJBocPHFKZp5iPswAMjtOb9mkrlax61/RAkmAN57alIMGOI+3dunasYh0SCo
        AJiIAJgIAxGXufDCZJhEVn8SUYIJgMQfJ8aAIe7y3qqJ5kp8urkKo5DIElQATEAATICRiKt075qqGYZE
        i2AC4FzlhBgwxE3Or5ukmYVEj6ACYDwCYDzMRFwj8acJ3PpnDsEEwNknx8eAIe7BrX9GEVQAjEMAjIOh
        iEtc2Mitf4YRTACceWJcDBjiDolnxmsGIdEmqADIRgBkw1jEBc6tGmeu1GPr3ziNZBbBBMDpP2THgCH2
        c6ZynLm8b4pmDhJ9ggqAsQiAsTAYsZmzq7LZ/JlNMAFw6vGxMWCIvZxdw20/CSwAxiAAxsBoxEYSz49n
        8xMhmAB49/djYsAQ+zi/aaJmBJKZBBUAoxEAo2E4YgunnxrL8z7pTzAB8M7vRseAIXbw/sYJ5gNu+cmt
        BBUAoxAAo2A+kk7OPjPWdO+bbK40TiVEI5gAOPnbUTFgSHo4vWqM6aqepBWckL4EFQAjEQAjYUYSJmee
        HmsuVk3UCk2IRjAB8PZvRsaAIcFz8vFR5twL2ebSXm71yZBhALjIycex2q8day5snWA+ODhFKywhgyGY
        AHjr15+IAUNSwztPjDKn1owx720YZ7p24WzfgOIRkjx2BcDbvx953ei9Zs90lKIRkiqCCYATKz8eA2Yw
        vPW7T5gzfx5runZO1G6QEBIc6QsAafzEhmzzQd1k3AjOsYSQsAkmAN781cdiwAzEqWdGs/EJST/hBsCJ
        337cXNg+XrsRQkj4BBMAbzz20RgwfTnxm4+ZS3vknK/eCCEkfMIJADY/IVYSTAC8/uhHYsAIb/76o6Zr
        N5ufEAsJPgDe2zzOfIDBCCHWEUwAHH/k72LAvLNmpDYoIcQOgguAN1Z+xHTXTdIGJYTYQXABcPblMRhg
        MiHEXoIJgLef+nisuxarfxyDEEJsJZgAwIXL+w1ECLGPwAJgXb+BCCH2EVgAaIMRQuwi9QGAi8b6DUII
        sZNAAmB5v0EIIXYSSABU9BuEEGInQQTAJASAfARICLEcBgAhGQwDgJAMhgFASAaT+gC4jIsCQwixHgYA
        IRlMAAFQjwCox8UJIbbDACAkgwkiACYiACbi4oS4TWPz3ddZezj3juxruef6v9euZyEMAJLZnGiY7jWu
        NPAvjhSa/zhWYh44vixl/LCj1Ltub0DIeNp9pAkGAMksjjTOMBsOzfGa8p8671ebNmhkXAkaCQW5H+0+
        Q4IBQKLNufgUs731XrOyPZa2hr8Tcl8SSHKfcr/acwQEA4BEE9luS1NpDWc7vWGgPVeKYQCQ6HCiYZqp
        bFto/hEr6j+gkVxHnmNle36QxwQGAHGfhua7zU+OFaNpPhtZ5Pn2tnxSff4kYAAQd9nW+mnz3deWqA0T
        VeR55bm1+RgGQQTABATABFyckGBoaJplvtuRWY3fH3n+bS0SBPocDRIGAHEHafyfHMVWvxNNQDxkPmRe
        tPkaBAEEwEEEwEFcnJAUca5+svlVe77aAKQHmR+ZJ23+bgMDgNjN3uYc89Br95mvdH6G3AGZp/Wts9V5
        HIDUB0A3LgoMIclwFqvZz9sLVKOT21NxtMi8GZ+qzms/GADEPvZ4q/5S1dxkcMj8bW35lDq/fWAAELt4
        8vB81dBkePyqLc/bTWlzDRgAxA7EpD84tkg1MUkOmdf2hru0eQ8iAMYjAMbj4oQMjvaG6eYb2LJ+GWYl
        wSDzG2+a2X/uGQAkvWxtuQcGvZ+EhMx3n/lnAJD0weZPD08czu2tAQOApIfH2haq5iThIPOPOjAASPh4
        zf8ajEjSyreOla3z2zZ1QoEZAGRA2Px28aXX7q/0Wzc1QpEZAETl0bYFMNx91vON4182f048bU5dfdcM
        VfIzOy5sM9954yH12paSuhDorkMA1KHghPRha/M9mvGsY+WpFebihxf9dk5OEiLaGJaywm/h5NRdNw4B
        MA5FJ6SHrc2f1AxnHdL8qZbsBrSxLKXcb+PhCwVnAJDrtMenaUazjh+ceNhv2dTrF+/8VB3TUpb5rTw8
        oegMAOLxZv1kU95RppnMOlq7m/x2Tb3kvYA2pqUkQI7fzkPXJQQAMIT8y9Ei8/cwle388xsP+a0anH6O
        XYA2tp0sjYMsv6WHJhSeAUDM44fmiZGcoPLM7/02DU4b339JHdtihvcdARSfAZDh7G6apRnKWp5LrPHb
        NDjJEUMb23KG/lIQBmAAZDBnDk40X+8o1cxkLQyAAUmAbL+1ByeYgAGQwfy4vUAzktU8dy74AGhxMwCE
        Kr+1ByeYgAGQoWxu+qT5YsdS5wgrALSxHWG539531qW6bARANgxBMokzByeYrx0r1cxjPQyAO7EkAQZ3
        FIAZGAAZyCOHc8UoThJeAOjjO8LgPhWAGRgAGUZ9w12aYZyBATBoYn6bD6xLtQiAWhiDZAw/bo9pZnEG
        BsCg6fTbfGDBEAyADKK6cab5AszhMmtDCgBtbAe5/XcDYAoGQAbx7aMlmkmcggEwJG6/C4ApGAAZwuam
        u2GIMudZe26136bBqScA9PEdZOBdAIzBAMgQvn20WDOHczAAhszAu4Cu2rEVwJBoU904QzOGkzAAhoW+
        C4A5GAAZwI/a8zVTOAkDYFjE/Za/WTAHAyDivH5wovn8sbLIEEoAXGpSx3acW78XAIMwACLOikPzUPzS
        yBBOADSqYzvOrb9NGAZhAEScB4+WaGZwFgZAUtz8m4NgEAZAhPlL4yzNBE7DAEiKm18GwiQMgAjzn4fn
        ayZwGgZAUtz8MhAmYQBElNN1483nUPSo8WxIAaCNHRFu/FfhrpoxFcCQ6CHbf6X4zvPsuVV+mwaniAfA
        jV8YAqMwACLKTw/lotiLI0d4AaCPHwFu/NowGIUBEFG+erRYK77zMABSQs+nATAKAyCC1MWnakWPBAyA
        lNDzJ8VgFgZABFnV/Cmt6JEgjABojngALDu2uOevC8MsDIAI8q+HF0qRI8mzZ8MJAG3syHB0cc/HgTAL
        AyCCPHCkGEVeFElCCwBl7CjhBcBFBAAwJDq0HpykFjwqMABSRgwBMBoBMBrGIVHh1YYZWrEjAwMgZSxn
        AESQPzXfoxU7pfzs7Qqz/fwWr1HC5t2r7/htGpwufnhBHTtoZE4fffcX5qsdn1fnPZV89uiiSgZABPnh
        4QVS3ED40Ynvh9KAmS4JoEcQBFoNUkgVAyCCPNyWpxU7acSQVLiSHYFWixSRYABEkM8eLUk5//X2v/uW
        pMLWH07/Wq1JKhhx8QAC4ACMQyLBqZpstdDJwm1/evXN4w+qdUkWBkDEqK2fohY6Gbj1T7/WJ15Ua5Ms
        DICIIQHwGRQ2ley/uMe3IZUuvXb5mFqbZEEAjEIAjIJ5SBTY1DBDLXQyyMdTVPql1SZZGAAR46mmHPOZ
        IyhuCmm+1OBbkEqntNokCwMgYvQEQHFKYQDYIa02yTLi+JYxDIAIwQCIrrTaJAsDIGJU1t5t7kdhUwkD
        wA5ptUkWBkDEqDzAAIiqtNoky4i658YyACIEAyC60mqTLCNqEQDn9owyF2Ae4j5P7puFwhalFAaAHdJq
        kyxeAJzYPlo1E3GPJ3bMVAudDAffr/UtSKVLV65cUWuTLCNq146paNuAANg/kkSAIAJg/+m9vg2pdKmr
        q0utTbJ4AQDMud26oYhbPLNzurmvrcjch+Kmiuq3d/g2pNKls2fPqrVJFgmAmARA52buAqLA/t0TzdLG
        QrXYw2Vj+wbfhlS6dPz4cbU2ybD0UKEXAFkSAPV/HmPe36ubiriDBMCSeIFa8OHyu5aVJpFI+FakwpZs
        /9c3vaTWJhmWNhb0/GZgBEBcQuDIRu4CXKdj71hTtj9m7mvHLiBFfLfhW6atrc17EUWFq2vXrpmOjg7z
        b/EfqrVJhrKa2PUAWC4BIJz86yjVWMQdSqtTGwCyUsgKJEZkCISn3ubf3bzLLKnHrk6pTTLIQtEbANm9
        ASBHAb4QdJsHd843S1HglNFWaB6o+YKpa6nzdgI8DgQv2fYfOXLEm/OHah40S3BeV2uTBIur8nsCQITm
        r+wNgeZ1o/k+wGG+t/VeteDJsAS7ADFiNVaj1tZWz5wnT570wkDMGibd3d1+mwQn2eloYwfJ+fPnzalT
        p7xVX+ZYmv87td80ZfECtSbJsmhz3o0/E47Gv74LuBECn4ChiGs8umOWWdKUetOUYRv6uf1lZkX9zz1z
        iknTgbwRD1rSiNrYYfHHhifMAwc+753TZQem1SMZlrQWmJJNeZV++/cIje99J6BvCJzZJauKbjRiJ+t3
        TjGlNfkotIRAalnSEDOl+/I9ZHWSMAibXa9X+W0anF4716GOHTTfr30YIVvqzW9ZHM2v1CAVlNXHEAAL
        K/zW7xGaXj4S9D4R6EXeCbyxRV4M6mYj9tG0Z5xZXB1MAHgchoFgzjKETG8YhMnqNyv9Ng1Oje/H1bED
        5wAaH80pc6zOfYoo3ZMvARDzW/+G0PQ5INEbAL20vszdgEuUbMlTCx8F1pz5o9+mwanpUoM6dlRYtD1P
        AiDLb/ubhYbPqUEIANOfwxtGm3d2jDTnYTJiL8u3ftqU4Zy3BMWOGmEFgDZ2JMDuonjTwrjf7rpqnh0T
        AwlgNOLPjzHtr4w2b24dZU7vRCDsg/GINTxeNcMsxhZdNYDjMACSo7QuJgGwwm/1gYVGzwGdfRufuMHa
        5yebRTvzVAO4TjgBEFfHjgKLqvMkAJb5bX57wUxZYF1fcxE3KN60wCw5FDNL2qJFKAHQhQBQxo4CxX9Z
        IN7Qz/8DqebZ0TgSjI4DmIu4wMPr7zGLa3EMUEzgMqsZAMOm9GC+NP/tz/+3E4wlQYAdgW46Yg+/eWGa
        Kdm50JSh8FEirADQxnadEmz/izYtWO638/AFg+FoMHoZWAGqQCdQjUjSw+bnxkmxTRmOAZoZXIUBMEzg
        gyJs/+GJbL+NqagLxa5adCBPN4SjMACGhxwH4Yfhb/8p91S0aX558RbsAtryI8PqM8F/E7AnAPTxXaV4
        m6z+85Pf/lPuCAXPAmZxg+wCdGO4RhgB0BixAChtkrP/fIHb/0xT4ab5lcU7F5hSMUIECCsAtLFdpbh6
        oYEP1vmWoDJJKHwMmMUtujlcgwEwNKTuUn8wuC//UNETih+XVUAziGswAIZGyR5v9e/0rUBlomCAclkF
        FrfkqSZxCQbAEDiUZwr/4q3+fPmX6SrclNtZXC3vAiQE3GX16bACQB/fJUr2LEDz5ybA0L76S0VPhRtz
        y4FZ3JxnFh92l1UhBYA2tlOgzlJvcPNv/qEyVzBDZ9FfcRTQDOMIDIDBUbwLq/9GrP4bufpTvmAGbxew
        KL5QNY0LMADujNRX6gy4+lM3C6boLNrs7i6AAXBnirbOl+bvBFz9qZsFU8SAKdm7AGaRnYBbrDr9pN+m
        waknAPTxbadkv7f1F8r9klPUzYI5qsQkixrdCwEGwMAsasbW/1Wv+W/80Q+K6q+CjbnZIFGIreIiMY5D
        hBUA2ti2U/jX+QZ1FXL8UlOULpikQsxSjKOAZiZbYQDoFGPr7zc/X/xRgxPMEhfTlMTdCQEGwK2U4Cjn
        N38n4Is/anCCWXIKcGYUFrW6EQK/ff0xv02D097Tu9WxrQR1K9zsNb/ArT81NBVsnLcc4PyIEDgsIWA3
        jx39P79Ng9O245vVsW2kaIc0/jyBW39qeIq9Mm8dMIU7cRw4tMBq/vfQ/3h/vjtIvdL2sjq2bRTtmW+k
        boBv/anhCwbKAp1ipqID81Wz2cL3mr/j/fnuoJRIJMwvG/9bHdsmpE5+8yekfn4pKWp4golyfDOZolp7
        Q+D+eIn3N/S7u7v9lk2drl27Ztra2szX67+ijm0LxQ1o/k1e8ws891OpEcxU7pkK5hKTaeZLN8XNC8yT
        8cdNR0eH17CpklxLrvlS44vWPrvQr/n5bT8qtYKpltseAvftLzLVzbu81bqrq8tv4eFLdhPS/HUtteZr
        B75sSlotDb+bm//Of+CTooaj/FfmVgKTv2muKWrINcWH5ltFUWOu+dr+L3kNK8eB48ePm/Pnzw/p5aCs
        +PIzb731lncNuda3D5Sbonr7nleQOkg9vLqgPn6pKCoYWR8Ctblm6d4i80zDaq+Bk0G2/RIoRQecaH6+
        8afCkfUhUJdrCvfM85r3lwd/5jXyUFhZ/4i36ss1imrwfNj6a+Okk37NHwd840+Fp74hUGjjCtmEJkHz
        ShMPi/1ofhwp1GunGTY/ZYWuhwCwMgQEWb2bcG9DoaXfNSxC5rl3zkEVYPNT6VPeK3MqgRFiO3EkOJRL
        AiJWPdebZx++8KPsEMxY0WvM/C3YDWAV1QxMhkkLVv3tbH7KYuVtmFMOEsDkbZxjCmpwhm6FeUlSFB6c
        582nN6898Es+lJ2COXNAZ69ZY7twJGjWjU3uTMFuNP+Nxk/kb5sb86eaouwUjJoFqnqNm//qHG8V0wxO
        dArj80z+Zmz5bzS/zCdf9lHuCIZdnrdhNszbQ89uQIKADAjmp2C3NP6NecM88v/zU24KBsaRYHb8upk3
        zjYF++eaQpid3ExBzVzslvo2/mwcpWZzy0+5Lxi5oo+xTf62OabgIINAkHmQ+eg7P2AF4Jafio5gaNkN
        4CzLIPBonGdiO25pfJkf/j9+KrqCwcuBbG+vGz+TgkCeU2n8BODHe1TmCIaXY4EY/3oj5G9GEET0HYE8
        l7LVl+eXeeB2n8o8ifGlARaiEYDpRV4W5u9CGMTnmoJWh2lE0+M55Hn6Ph9g41NUr9AQWaAcdPoNcp28
        zQiDvQgDNJPaZLYhTY/7lfvu/yxAnk8Cj41PUZrQHMvAOnBLA+W9ijDYOcfEahAIWvOliVgdmh73NUDT
        C1WAZ3yKGqwWrp+dDZaDODAaeVvn9ATCAQRCA5qxJQQwjoyXX42Gx/jaffl0ggqQ7T8SRVHDkTQRuG0Y
        9OKFQlVPg8b2AazOgtrMA9D7M72NLtfzmv0Vfcw+yP1J0/OjPIoKQgvX35sFykElQMPdi8ZLG1jlvfuQ
        ++FKT1FhawECAcRABVgHqoAJgDiQ68s4Mh5f5FGUrZIG9Ru1Nxz60hsUfen/b3p/lo1OURRFURRFURRF
        URRFURRFURRFURRFURRFURRFURRFURRFURRFURRFUZRVGjHi/wF6Jm2Je4MTlQAAAABJRU5ErkJggg==
</value>
  </data>
</root>